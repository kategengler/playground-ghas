name: Newly Added RFC

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize, reopened]
    paths:
      - 'text/*.md'

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  check-files:
    name: Does PR add RFCs?
    runs-on: ubuntu-latest
    outputs:
      rfcs-added: ${{ steps.rfcs.outputs.added-rfcs-count }}
    steps:
      - uses: actions/checkout@v3

      - name: RFCs Added or Changed
        id: rfcs
        uses: ./.github/actions/find-added-or-modified-rfcs

  check-in-exploring:
    name: Stage must be 'Exploring' (via label) for new RFC before merging
    if: ${{ needs.check-files.outputs.rfcs-added }}
    runs-on: ubuntu-latest
    needs: [check-files]
    steps:
      - name: Ensure the RFC is in the Exploring Stage before merge is allowed
        if: needs.check-files.outputs.rfcs-added && !contains(github.event.pull_request.labels.*.name, 'S-Exploring')
        run: |
          echo "Newly added RFCs must advance to the Exploring Stage before merging to Accepted is allowed"
          exit 1

  verify-only-in-one-stage:
    name: RFC must be in only one stage before merging (labels)
    runs-on: ubuntu-latest
    needs: [check-files]
    if: needs.check-files.outputs.rfcs-added
    steps:
      - name: Ensure the RFC only has one stage
        if: contains(github.event.pull_request.labels.*.name, 'S-Exploring') && contains(github.event.pull_request.labels.*.name, 'S-Proposed')
        run: |
          echo "Newly added RFC must only have one stage label"
          exit 1

  only-one-rfc-added:
    name: Only one RFC can be added in a PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Find added or modified RFCs
        id: rfcs
        uses: tj-actions/changed-files@v25
        with:
          path: 'text'
          json: 'true'

      - name: Fail if more than 1 RFC is added
        run: |
          len=`echo "${{ steps.rfcs.outputs.all_changed_files }}" | jq '. | length'`
          echo "RFCs added or modified: ${{ steps.rfcs.outputs.all_changed_files }}"
          if [[ $len > 1 ]]; then
            echo "::error::More than 1 RFC is added in this PR; will be unable to automatically open PRs for advancement"
            exit 1
          fi

  frontmatter-stage-is-accepted:
    name: Frontmatter stage must be 'accepted' before merging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Find added or modified RFCs
        id: rfcs
        uses: tj-actions/changed-files@v25
        with:
          path: 'text'
          json: 'true'

      - name: Find out if an RFC has been added
        id: added-rfc
        run: |
          len=`echo "${{ steps.rfcs.outputs.added_files }}" | jq '. | length'`
          if [[ $len == 1 ]]; then
            echo "::set-output name=exists::true"
          fi          

      - name: Setup RFCs tooling
        uses: ./.github/actions/setup-rfcs-tooling
        with:
          token: ${{ github.token }}

      - name: Verify stage of newly added RFC is `accepted` in frontmatter
        if: steps.added-rfc.outputs.exists
        run: |
          added_rfc=`echo "${{ steps.rfcs.outputs.added_files }}" | jq '.[0]'` 
          frontmatter=`node rfcs-tooling/rfc-frontmatter.js "$added_rfc"`
          stage=`echo $frontmatter | jq '.stage'`
          if [[ $stage != '"accepted"' ]]; then
              echo "::error::Newly added RFCs must have the stage 'accepted' in the frontmatter"
              exit 1
          fi

  check-filename:
    name: Filename matches RFC number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Find added or modified RFCs
        id: rfcs
        uses: tj-actions/changed-files@v25
        with:
          path: 'text'
          json: 'true'

      - name: Find out if an RFC has been added
        id: added-rfc
        run: |
          len=`echo "${{ steps.rfcs.outputs.added_files }}" | jq '. | length'`
          if [[ $len == 1 ]]; then
            changed_file=`echo "${{ steps.rfcs.outputs.added_files }}" | jq '.[0]'`
            echo "::set-output name=path::$changed_file"
            echo "::set-output name=exists::true"
          fi          

      - name: Setup RFCs tooling
        uses: ./.github/actions/setup-rfcs-tooling
        with:
          token: ${{ github.token }}

      - name: Test RFC Filename matches PR Number that adds it
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: node check-filename-matches-pr.js $PR_NUMBER ${{ steps.added-rfc.outputs.path }}
        working-directory: rfcs-tooling
